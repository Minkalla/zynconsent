    {
      "root": true,
      "parser": "@typescript-eslint/parser",
      "plugins": [
        "@typescript-eslint"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended" // Integrates Prettier rules
      ],
      "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module",
        "project": "./tsconfig.json" // Make sure this points to your tsconfig.json
      },
      "rules": {
        // Adjust rules for MVP flexibility while maintaining good practice
        "@typescript-eslint/no-explicit-any": "off", // Allow 'any' for MVP simplicity
        "@typescript-eslint/explicit-module-boundary-types": "off", // Allow implicit any on function return types
        "@typescript-eslint/no-empty-interface": "off", // Allow empty interfaces
        "@typescript-eslint/ban-types": [ // Adjust generic type restrictions
          "error",
          {
            "types": {
              "{}": false, // Allow empty object type, though specific interfaces are preferred
              "object": {
                "message": "Use `object` when you mean 'any non-primitive value', otherwise specify a more precise type.",
                "fixWith": "Record<string, unknown>"
              },
              "[]": false // Allow empty array type, though specific array types are preferred
            },
            "extendDefaults": true
          }
        ],
        "prettier/prettier": "error" // Ensure Prettier rules are enforced
      }
    }
    